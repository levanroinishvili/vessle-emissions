# .github/workflows/ci.yml
name: CI & Deploy to Pages

on:
  push:
    branches: [ main ]
  pull_request:

# Needed for Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Avoid Nx Cloud "not connected" errors; keep remote cache off in CI.
      NX_NO_CLOUD: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci --legacy-peer-deps

      # Configure GitHub Pages (sets up the deployment environment)
      - uses: actions/configure-pages@v5

      # Compute correct <base href>:
      # - User/Org site  (owner.github.io): "/"
      # - Project site   (owner/repo):      "/<repo>/"
      - name: Compute base href
        run: |
          if [[ "${{ github.repository }}" == "${{ github.repository_owner }}/${{ github.repository_owner }}.github.io" ]]; then
            echo "BASE_HREF=/" >> $GITHUB_ENV
          else
            echo "BASE_HREF=/${{ github.event.repository.name }}/" >> $GITHUB_ENV
          fi
          echo "Using BASE_HREF=${BASE_HREF}"

      # Build your Nx Angular app
      # If your output path differs, adjust the upload path below.
      - name: Build (production)
        run: npx nx build navtor --configuration=production --base-href="${{ env.BASE_HREF }}"

      # SPA deep-link fallback on GitHub Pages: serve 404.html as index.html
      - name: Create SPA fallback (404.html)
        run: |
          OUT_DIR="dist/apps/navtor"
          # If you're using Angular SSR 'application' builder, browser output might be under .../browser
          if [ -d "dist/apps/navtor/browser" ]; then OUT_DIR="dist/apps/navtor/browser"; fi
          cp "$OUT_DIR/index.html" "$OUT_DIR/404.html"
          echo "OUT_DIR=$OUT_DIR" >> $GITHUB_ENV

      # Upload the built site as a Pages artifact
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
